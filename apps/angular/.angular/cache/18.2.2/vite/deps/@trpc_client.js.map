{
  "version": 3,
  "sources": ["../../../../../../../node_modules/@trpc/server/dist/observable-ade1bad8.mjs", "../../../../../../../node_modules/@trpc/server/dist/observable/index.mjs", "../../../../../../../node_modules/@trpc/client/dist/splitLink-4c75f7be.mjs", "../../../../../../../node_modules/@trpc/server/dist/codes-c924c3db.mjs", "../../../../../../../node_modules/@trpc/server/dist/index-f91d720c.mjs", "../../../../../../../node_modules/@trpc/server/dist/getCauseFromUnknown-2d66414a.mjs", "../../../../../../../node_modules/@trpc/client/dist/transformResult-ace864b8.mjs", "../../../../../../../node_modules/@trpc/client/dist/TRPCClientError-38f9a32a.mjs", "../../../../../../../node_modules/@trpc/client/dist/httpUtils-b9d0cb48.mjs", "../../../../../../../node_modules/@trpc/client/dist/httpBatchLink-d0f9eac9.mjs", "../../../../../../../node_modules/@trpc/client/dist/links/httpLink.mjs", "../../../../../../../node_modules/@trpc/client/dist/links/loggerLink.mjs", "../../../../../../../node_modules/@trpc/client/dist/links/wsLink.mjs", "../../../../../../../node_modules/@trpc/client/dist/index.mjs"],
  "sourcesContent": ["function identity(x) {\n  return x;\n}\n\n/** @internal */\nfunction pipeFromArray(fns) {\n  if (fns.length === 0) {\n    return identity;\n  }\n  if (fns.length === 1) {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    return fns[0];\n  }\n  return function piped(input) {\n    return fns.reduce((prev, fn) => fn(prev), input);\n  };\n}\nfunction isObservable(x) {\n  return typeof x === 'object' && x !== null && 'subscribe' in x;\n}\nfunction observable(subscribe) {\n  const self = {\n    subscribe(observer) {\n      let teardownRef = null;\n      let isDone = false;\n      let unsubscribed = false;\n      let teardownImmediately = false;\n      function unsubscribe() {\n        if (teardownRef === null) {\n          teardownImmediately = true;\n          return;\n        }\n        if (unsubscribed) {\n          return;\n        }\n        unsubscribed = true;\n        if (typeof teardownRef === 'function') {\n          teardownRef();\n        } else if (teardownRef) {\n          teardownRef.unsubscribe();\n        }\n      }\n      teardownRef = subscribe({\n        next(value) {\n          if (isDone) {\n            return;\n          }\n          observer.next?.(value);\n        },\n        error(err) {\n          if (isDone) {\n            return;\n          }\n          isDone = true;\n          observer.error?.(err);\n          unsubscribe();\n        },\n        complete() {\n          if (isDone) {\n            return;\n          }\n          isDone = true;\n          observer.complete?.();\n          unsubscribe();\n        }\n      });\n      if (teardownImmediately) {\n        unsubscribe();\n      }\n      return {\n        unsubscribe\n      };\n    },\n    pipe(...operations) {\n      return pipeFromArray(operations)(self);\n    }\n  };\n  return self;\n}\nexport { isObservable as i, observable as o };", "export { i as isObservable, o as observable } from '../observable-ade1bad8.mjs';\nfunction share(_opts) {\n  return originalObserver => {\n    let refCount = 0;\n    let subscription = null;\n    const observers = [];\n    function startIfNeeded() {\n      if (subscription) {\n        return;\n      }\n      subscription = originalObserver.subscribe({\n        next(value) {\n          for (const observer of observers) {\n            observer.next?.(value);\n          }\n        },\n        error(error) {\n          for (const observer of observers) {\n            observer.error?.(error);\n          }\n        },\n        complete() {\n          for (const observer of observers) {\n            observer.complete?.();\n          }\n        }\n      });\n    }\n    function resetIfNeeded() {\n      // \"resetOnRefCountZero\"\n      if (refCount === 0 && subscription) {\n        const _sub = subscription;\n        subscription = null;\n        _sub.unsubscribe();\n      }\n    }\n    return {\n      subscribe(observer) {\n        refCount++;\n        observers.push(observer);\n        startIfNeeded();\n        return {\n          unsubscribe() {\n            refCount--;\n            resetIfNeeded();\n            const index = observers.findIndex(v => v === observer);\n            if (index > -1) {\n              observers.splice(index, 1);\n            }\n          }\n        };\n      }\n    };\n  };\n}\nfunction map(project) {\n  return originalObserver => {\n    return {\n      subscribe(observer) {\n        let index = 0;\n        const subscription = originalObserver.subscribe({\n          next(value) {\n            observer.next?.(project(value, index++));\n          },\n          error(error) {\n            observer.error?.(error);\n          },\n          complete() {\n            observer.complete?.();\n          }\n        });\n        return subscription;\n      }\n    };\n  };\n}\nfunction tap(observer) {\n  return originalObserver => {\n    return {\n      subscribe(observer2) {\n        return originalObserver.subscribe({\n          next(v) {\n            observer.next?.(v);\n            observer2.next?.(v);\n          },\n          error(v) {\n            observer.error?.(v);\n            observer2.error?.(v);\n          },\n          complete() {\n            observer.complete?.();\n            observer2.complete?.();\n          }\n        });\n      }\n    };\n  };\n}\nclass ObservableAbortError extends Error {\n  constructor(message) {\n    super(message);\n    this.name = 'ObservableAbortError';\n    Object.setPrototypeOf(this, ObservableAbortError.prototype);\n  }\n}\n/** @internal */\nfunction observableToPromise(observable) {\n  let abort;\n  const promise = new Promise((resolve, reject) => {\n    let isDone = false;\n    function onDone() {\n      if (isDone) {\n        return;\n      }\n      isDone = true;\n      reject(new ObservableAbortError('This operation was aborted.'));\n      obs$.unsubscribe();\n    }\n    const obs$ = observable.subscribe({\n      next(data) {\n        isDone = true;\n        resolve(data);\n        onDone();\n      },\n      error(data) {\n        isDone = true;\n        reject(data);\n        onDone();\n      },\n      complete() {\n        isDone = true;\n        onDone();\n      }\n    });\n    abort = onDone;\n  });\n  return {\n    promise,\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    abort: abort\n  };\n}\nexport { map, observableToPromise, share, tap };", "import { observable } from '@trpc/server/observable';\n\n/** @internal */\nfunction createChain(opts) {\n  return observable(observer => {\n    function execute(index = 0, op = opts.op) {\n      const next = opts.links[index];\n      if (!next) {\n        throw new Error('No more links to execute - did you forget to add an ending link?');\n      }\n      const subscription = next({\n        op,\n        next(nextOp) {\n          const nextObserver = execute(index + 1, nextOp);\n          return nextObserver;\n        }\n      });\n      return subscription;\n    }\n    const obs$ = execute();\n    return obs$.subscribe(observer);\n  });\n}\nfunction asArray(value) {\n  return Array.isArray(value) ? value : [value];\n}\nfunction splitLink(opts) {\n  return runtime => {\n    const yes = asArray(opts.true).map(link => link(runtime));\n    const no = asArray(opts.false).map(link => link(runtime));\n    return props => {\n      return observable(observer => {\n        const links = opts.condition(props.op) ? yes : no;\n        return createChain({\n          op: props.op,\n          links\n        }).subscribe(observer);\n      });\n    };\n  };\n}\nexport { createChain as c, splitLink as s };", "/**\n * @internal\n */function invert(obj) {\n  const newObj = Object.create(null);\n  for (const key in obj) {\n    const v = obj[key];\n    newObj[v] = key;\n  }\n  return newObj;\n}\n\n// reference: https://www.jsonrpc.org/specification\n/**\n * JSON-RPC 2.0 Error codes\n *\n * `-32000` to `-32099` are reserved for implementation-defined server-errors.\n * For tRPC we're copying the last digits of HTTP 4XX errors.\n */\nconst TRPC_ERROR_CODES_BY_KEY = {\n  /**\n  * Invalid JSON was received by the server.\n  * An error occurred on the server while parsing the JSON text.\n  */\n  PARSE_ERROR: -32700,\n  /**\n  * The JSON sent is not a valid Request object.\n  */\n  BAD_REQUEST: -32600,\n  // Internal JSON-RPC error\n  INTERNAL_SERVER_ERROR: -32603,\n  NOT_IMPLEMENTED: -32603,\n  // Implementation specific errors\n  UNAUTHORIZED: -32001,\n  FORBIDDEN: -32003,\n  NOT_FOUND: -32004,\n  METHOD_NOT_SUPPORTED: -32005,\n  TIMEOUT: -32008,\n  CONFLICT: -32009,\n  PRECONDITION_FAILED: -32012,\n  PAYLOAD_TOO_LARGE: -32013,\n  UNPROCESSABLE_CONTENT: -32022,\n  TOO_MANY_REQUESTS: -32029,\n  CLIENT_CLOSED_REQUEST: -32099\n};\nconst TRPC_ERROR_CODES_BY_NUMBER = invert(TRPC_ERROR_CODES_BY_KEY);\nexport { TRPC_ERROR_CODES_BY_KEY as T, TRPC_ERROR_CODES_BY_NUMBER as a, invert as i };", "import { i as invert, T as TRPC_ERROR_CODES_BY_KEY } from './codes-c924c3db.mjs';\nconst TRPC_ERROR_CODES_BY_NUMBER = invert(TRPC_ERROR_CODES_BY_KEY);\nconst JSONRPC2_TO_HTTP_CODE = {\n  PARSE_ERROR: 400,\n  BAD_REQUEST: 400,\n  UNAUTHORIZED: 401,\n  NOT_FOUND: 404,\n  FORBIDDEN: 403,\n  METHOD_NOT_SUPPORTED: 405,\n  TIMEOUT: 408,\n  CONFLICT: 409,\n  PRECONDITION_FAILED: 412,\n  PAYLOAD_TOO_LARGE: 413,\n  UNPROCESSABLE_CONTENT: 422,\n  TOO_MANY_REQUESTS: 429,\n  CLIENT_CLOSED_REQUEST: 499,\n  INTERNAL_SERVER_ERROR: 500,\n  NOT_IMPLEMENTED: 501\n};\nfunction getStatusCodeFromKey(code) {\n  return JSONRPC2_TO_HTTP_CODE[code] ?? 500;\n}\nfunction getHTTPStatusCode(json) {\n  const arr = Array.isArray(json) ? json : [json];\n  const httpStatuses = new Set(arr.map(res => {\n    if ('error' in res) {\n      const data = res.error.data;\n      if (typeof data.httpStatus === 'number') {\n        return data.httpStatus;\n      }\n      const code = TRPC_ERROR_CODES_BY_NUMBER[res.error.code];\n      return getStatusCodeFromKey(code);\n    }\n    return 200;\n  }));\n  if (httpStatuses.size !== 1) {\n    return 207;\n  }\n  const httpStatus = httpStatuses.values().next().value;\n  return httpStatus;\n}\nfunction getHTTPStatusCodeFromError(error) {\n  return getStatusCodeFromKey(error.code);\n}\nconst noop = () => {\n  // noop\n};\nfunction createInnerProxy(callback, path) {\n  const proxy = new Proxy(noop, {\n    get(_obj, key) {\n      if (typeof key !== 'string' || key === 'then') {\n        // special case for if the proxy is accidentally treated\n        // like a PromiseLike (like in `Promise.resolve(proxy)`)\n        return undefined;\n      }\n      return createInnerProxy(callback, [...path, key]);\n    },\n    apply(_1, _2, args) {\n      const isApply = path[path.length - 1] === 'apply';\n      return callback({\n        args: isApply ? args.length >= 2 ? args[1] : [] : args,\n        path: isApply ? path.slice(0, -1) : path\n      });\n    }\n  });\n  return proxy;\n}\n/**\n * Creates a proxy that calls the callback with the path and arguments\n *\n * @internal\n */\nconst createRecursiveProxy = callback => createInnerProxy(callback, []);\n/**\n * Used in place of `new Proxy` where each handler will map 1 level deep to another value.\n *\n * @internal\n */\nconst createFlatProxy = callback => {\n  return new Proxy(noop, {\n    get(_obj, name) {\n      if (typeof name !== 'string' || name === 'then') {\n        // special case for if the proxy is accidentally treated\n        // like a PromiseLike (like in `Promise.resolve(proxy)`)\n        return undefined;\n      }\n      return callback(name);\n    }\n  });\n};\nexport { TRPC_ERROR_CODES_BY_NUMBER as T, createRecursiveProxy as a, getHTTPStatusCode as b, createFlatProxy as c, getHTTPStatusCodeFromError as g };", "/**\n * @internal\n */function isObject(value) {\n  // check that value is object\n  return !!value && !Array.isArray(value) && typeof value === 'object';\n}\nclass UnknownCauseError extends Error {}\nfunction getCauseFromUnknown(cause) {\n  if (cause instanceof Error) {\n    return cause;\n  }\n  const type = typeof cause;\n  if (type === 'undefined' || type === 'function' || cause === null) {\n    return undefined;\n  }\n  // Primitive types just get wrapped in an error\n  if (type !== 'object') {\n    return new Error(String(cause));\n  }\n  // If it's an object, we'll create a synthetic error\n  if (isObject(cause)) {\n    const err = new UnknownCauseError();\n    for (const key in cause) {\n      err[key] = cause[key];\n    }\n    return err;\n  }\n  return undefined;\n}\nexport { getCauseFromUnknown as g };", "function isObject(value) {\n  // check that value is object\n  return !!value && !Array.isArray(value) && typeof value === 'object';\n}\n\n// FIXME:\n// - the generics here are probably unnecessary\n// - the RPC-spec could probably be simplified to combine HTTP + WS\n/** @internal */\nfunction transformResultInner(response, runtime) {\n  if ('error' in response) {\n    const error = runtime.transformer.deserialize(response.error);\n    return {\n      ok: false,\n      error: {\n        ...response,\n        error\n      }\n    };\n  }\n  const result = {\n    ...response.result,\n    ...((!response.result.type || response.result.type === 'data') && {\n      type: 'data',\n      data: runtime.transformer.deserialize(response.result.data)\n    })\n  };\n  return {\n    ok: true,\n    result\n  };\n}\nclass TransformResultError extends Error {\n  constructor() {\n    super('Unable to transform response from server');\n  }\n}\n/**\n * Transforms and validates that the result is a valid TRPCResponse\n * @internal\n */\nfunction transformResult(response, runtime) {\n  let result;\n  try {\n    // Use the data transformers on the JSON-response\n    result = transformResultInner(response, runtime);\n  } catch (err) {\n    throw new TransformResultError();\n  }\n  // check that output of the transformers is a valid TRPCResponse\n  if (!result.ok && (!isObject(result.error.error) || typeof result.error.error.code !== 'number')) {\n    throw new TransformResultError();\n  }\n  if (result.ok && !isObject(result.result)) {\n    throw new TransformResultError();\n  }\n  return result;\n}\nexport { isObject as i, transformResult as t };", "import { getCauseFromUnknown } from '@trpc/server/shared';\nimport { i as isObject } from './transformResult-ace864b8.mjs';\nfunction isTRPCClientError(cause) {\n  return cause instanceof TRPCClientError ||\n  /**\n  * @deprecated\n  * Delete in next major\n  */\n  cause instanceof Error && cause.name === 'TRPCClientError';\n}\nfunction isTRPCErrorResponse(obj) {\n  return isObject(obj) && isObject(obj.error) && typeof obj.error.code === 'number' && typeof obj.error.message === 'string';\n}\nclass TRPCClientError extends Error {\n  static from(_cause, opts = {}) {\n    const cause = _cause;\n    if (isTRPCClientError(cause)) {\n      if (opts.meta) {\n        // Decorate with meta error data\n        cause.meta = {\n          ...cause.meta,\n          ...opts.meta\n        };\n      }\n      return cause;\n    }\n    if (isTRPCErrorResponse(cause)) {\n      return new TRPCClientError(cause.error.message, {\n        ...opts,\n        result: cause\n      });\n    }\n    if (!(cause instanceof Error)) {\n      return new TRPCClientError('Unknown error', {\n        ...opts,\n        cause: cause\n      });\n    }\n    return new TRPCClientError(cause.message, {\n      ...opts,\n      cause: getCauseFromUnknown(cause)\n    });\n  }\n  constructor(message, opts) {\n    const cause = opts?.cause;\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore https://github.com/tc39/proposal-error-cause\n    super(message, {\n      cause\n    });\n    this.meta = opts?.meta;\n    this.cause = cause;\n    this.shape = opts?.result?.error;\n    this.data = opts?.result?.error.data;\n    this.name = 'TRPCClientError';\n    Object.setPrototypeOf(this, TRPCClientError.prototype);\n  }\n}\nexport { TRPCClientError as T };", "import { T as TRPCClientError } from './TRPCClientError-38f9a32a.mjs';\nconst isFunction = fn => typeof fn === 'function';\nfunction getFetch(customFetchImpl) {\n  if (customFetchImpl) {\n    return customFetchImpl;\n  }\n  if (typeof window !== 'undefined' && isFunction(window.fetch)) {\n    return window.fetch;\n  }\n  if (typeof globalThis !== 'undefined' && isFunction(globalThis.fetch)) {\n    return globalThis.fetch;\n  }\n  throw new Error('No fetch implementation found');\n}\nfunction getAbortController(customAbortControllerImpl) {\n  if (customAbortControllerImpl) {\n    return customAbortControllerImpl;\n  }\n  // eslint-disable-next-line @typescript-eslint/prefer-optional-chain\n  if (typeof window !== 'undefined' && window.AbortController) {\n    return window.AbortController;\n  }\n  // eslint-disable-next-line @typescript-eslint/prefer-optional-chain\n  if (typeof globalThis !== 'undefined' && globalThis.AbortController) {\n    return globalThis.AbortController;\n  }\n  return null;\n}\nfunction resolveHTTPLinkOptions(opts) {\n  return {\n    url: opts.url.toString().replace(/\\/$/, ''),\n    fetch: opts.fetch,\n    AbortController: getAbortController(opts.AbortController)\n  };\n}\n// https://github.com/trpc/trpc/pull/669\nfunction arrayToDict(array) {\n  const dict = {};\n  for (let index = 0; index < array.length; index++) {\n    const element = array[index];\n    dict[index] = element;\n  }\n  return dict;\n}\nconst METHOD = {\n  query: 'GET',\n  mutation: 'POST'\n};\nfunction getInput(opts) {\n  return 'input' in opts ? opts.runtime.transformer.serialize(opts.input) : arrayToDict(opts.inputs.map(_input => opts.runtime.transformer.serialize(_input)));\n}\nconst getUrl = opts => {\n  let url = opts.url + '/' + opts.path;\n  const queryParts = [];\n  if ('inputs' in opts) {\n    queryParts.push('batch=1');\n  }\n  if (opts.type === 'query') {\n    const input = getInput(opts);\n    if (input !== undefined) {\n      queryParts.push(`input=${encodeURIComponent(JSON.stringify(input))}`);\n    }\n  }\n  if (queryParts.length) {\n    url += '?' + queryParts.join('&');\n  }\n  return url;\n};\nconst getBody = opts => {\n  if (opts.type === 'query') {\n    return undefined;\n  }\n  const input = getInput(opts);\n  return input !== undefined ? JSON.stringify(input) : undefined;\n};\nconst jsonHttpRequester = opts => {\n  return httpRequest({\n    ...opts,\n    contentTypeHeader: 'application/json',\n    getUrl,\n    getBody\n  });\n};\nasync function fetchHTTPResponse(opts, ac) {\n  const url = opts.getUrl(opts);\n  const body = opts.getBody(opts);\n  const {\n    type\n  } = opts;\n  const resolvedHeaders = await opts.headers();\n  /* istanbul ignore if -- @preserve */\n  if (type === 'subscription') {\n    throw new Error('Subscriptions should use wsLink');\n  }\n  const headers = {\n    ...(opts.contentTypeHeader ? {\n      'content-type': opts.contentTypeHeader\n    } : {}),\n    ...(opts.batchModeHeader ? {\n      'trpc-batch-mode': opts.batchModeHeader\n    } : {}),\n    ...resolvedHeaders\n  };\n  return getFetch(opts.fetch)(url, {\n    method: METHOD[type],\n    signal: ac?.signal,\n    body: body,\n    headers\n  });\n}\nfunction httpRequest(opts) {\n  const ac = opts.AbortController ? new opts.AbortController() : null;\n  const meta = {};\n  let done = false;\n  const promise = new Promise((resolve, reject) => {\n    fetchHTTPResponse(opts, ac).then(_res => {\n      meta.response = _res;\n      done = true;\n      return _res.json();\n    }).then(json => {\n      meta.responseJSON = json;\n      resolve({\n        json: json,\n        meta\n      });\n    }).catch(err => {\n      done = true;\n      reject(TRPCClientError.from(err, {\n        meta\n      }));\n    });\n  });\n  const cancel = () => {\n    if (!done) {\n      ac?.abort();\n    }\n  };\n  return {\n    promise,\n    cancel\n  };\n}\nexport { getBody as a, getFetch as b, fetchHTTPResponse as f, getUrl as g, httpRequest as h, jsonHttpRequester as j, resolveHTTPLinkOptions as r };", "import { observable } from '@trpc/server/observable';\nimport { t as transformResult } from './transformResult-ace864b8.mjs';\nimport { T as TRPCClientError } from './TRPCClientError-38f9a32a.mjs';\nimport { r as resolveHTTPLinkOptions, g as getUrl, j as jsonHttpRequester } from './httpUtils-b9d0cb48.mjs';\n\n/* eslint-disable @typescript-eslint/no-non-null-assertion */ /**\n                                                              * A function that should never be called unless we messed something up.\n                                                              */\nconst throwFatalError = () => {\n  throw new Error('Something went wrong. Please submit an issue at https://github.com/trpc/trpc/issues/new');\n};\n/**\n * Dataloader that's very inspired by https://github.com/graphql/dataloader\n * Less configuration, no caching, and allows you to cancel requests\n * When cancelling a single fetch the whole batch will be cancelled only when _all_ items are cancelled\n */\nfunction dataLoader(batchLoader) {\n  let pendingItems = null;\n  let dispatchTimer = null;\n  const destroyTimerAndPendingItems = () => {\n    clearTimeout(dispatchTimer);\n    dispatchTimer = null;\n    pendingItems = null;\n  };\n  /**\n  * Iterate through the items and split them into groups based on the `batchLoader`'s validate function\n  */\n  function groupItems(items) {\n    const groupedItems = [[]];\n    let index = 0;\n    while (true) {\n      const item = items[index];\n      if (!item) {\n        break;\n      }\n      const lastGroup = groupedItems[groupedItems.length - 1];\n      if (item.aborted) {\n        // Item was aborted before it was dispatched\n        item.reject?.(new Error('Aborted'));\n        index++;\n        continue;\n      }\n      const isValid = batchLoader.validate(lastGroup.concat(item).map(it => it.key));\n      if (isValid) {\n        lastGroup.push(item);\n        index++;\n        continue;\n      }\n      if (lastGroup.length === 0) {\n        item.reject?.(new Error('Input is too big for a single dispatch'));\n        index++;\n        continue;\n      }\n      // Create new group, next iteration will try to add the item to that\n      groupedItems.push([]);\n    }\n    return groupedItems;\n  }\n  function dispatch() {\n    const groupedItems = groupItems(pendingItems);\n    destroyTimerAndPendingItems();\n    // Create batches for each group of items\n    for (const items of groupedItems) {\n      if (!items.length) {\n        continue;\n      }\n      const batch = {\n        items,\n        cancel: throwFatalError\n      };\n      for (const item of items) {\n        item.batch = batch;\n      }\n      const unitResolver = (index, value) => {\n        const item = batch.items[index];\n        item.resolve?.(value);\n        item.batch = null;\n        item.reject = null;\n        item.resolve = null;\n      };\n      const {\n        promise,\n        cancel\n      } = batchLoader.fetch(batch.items.map(_item => _item.key), unitResolver);\n      batch.cancel = cancel;\n      promise.then(result => {\n        for (let i = 0; i < result.length; i++) {\n          const value = result[i];\n          unitResolver(i, value);\n        }\n        for (const item of batch.items) {\n          item.reject?.(new Error('Missing result'));\n          item.batch = null;\n        }\n      }).catch(cause => {\n        for (const item of batch.items) {\n          item.reject?.(cause);\n          item.batch = null;\n        }\n      });\n    }\n  }\n  function load(key) {\n    const item = {\n      aborted: false,\n      key,\n      batch: null,\n      resolve: throwFatalError,\n      reject: throwFatalError\n    };\n    const promise = new Promise((resolve, reject) => {\n      item.reject = reject;\n      item.resolve = resolve;\n      if (!pendingItems) {\n        pendingItems = [];\n      }\n      pendingItems.push(item);\n    });\n    if (!dispatchTimer) {\n      dispatchTimer = setTimeout(dispatch);\n    }\n    const cancel = () => {\n      item.aborted = true;\n      if (item.batch?.items.every(item => item.aborted)) {\n        // All items in the batch have been cancelled\n        item.batch.cancel();\n        item.batch = null;\n      }\n    };\n    return {\n      promise,\n      cancel\n    };\n  }\n  return {\n    load\n  };\n}\n\n/**\n * @internal\n */\nfunction createHTTPBatchLink(requester) {\n  return function httpBatchLink(opts) {\n    const resolvedOpts = resolveHTTPLinkOptions(opts);\n    const maxURLLength = opts.maxURLLength ?? Infinity;\n    // initialized config\n    return runtime => {\n      const batchLoader = type => {\n        const validate = batchOps => {\n          if (maxURLLength === Infinity) {\n            // escape hatch for quick calcs\n            return true;\n          }\n          const path = batchOps.map(op => op.path).join(',');\n          const inputs = batchOps.map(op => op.input);\n          const url = getUrl({\n            ...resolvedOpts,\n            runtime,\n            type,\n            path,\n            inputs\n          });\n          return url.length <= maxURLLength;\n        };\n        const fetch = requester({\n          ...resolvedOpts,\n          runtime,\n          type,\n          opts\n        });\n        return {\n          validate,\n          fetch\n        };\n      };\n      const query = dataLoader(batchLoader('query'));\n      const mutation = dataLoader(batchLoader('mutation'));\n      const subscription = dataLoader(batchLoader('subscription'));\n      const loaders = {\n        query,\n        subscription,\n        mutation\n      };\n      return ({\n        op\n      }) => {\n        return observable(observer => {\n          const loader = loaders[op.type];\n          const {\n            promise,\n            cancel\n          } = loader.load(op);\n          let _res = undefined;\n          promise.then(res => {\n            _res = res;\n            const transformed = transformResult(res.json, runtime);\n            if (!transformed.ok) {\n              observer.error(TRPCClientError.from(transformed.error, {\n                meta: res.meta\n              }));\n              return;\n            }\n            observer.next({\n              context: res.meta,\n              result: transformed.result\n            });\n            observer.complete();\n          }).catch(err => {\n            observer.error(TRPCClientError.from(err, {\n              meta: _res?.meta\n            }));\n          });\n          return () => {\n            cancel();\n          };\n        });\n      };\n    };\n  };\n}\nconst batchRequester = requesterOpts => {\n  return batchOps => {\n    const path = batchOps.map(op => op.path).join(',');\n    const inputs = batchOps.map(op => op.input);\n    const {\n      promise,\n      cancel\n    } = jsonHttpRequester({\n      ...requesterOpts,\n      path,\n      inputs,\n      headers() {\n        if (!requesterOpts.opts.headers) {\n          return {};\n        }\n        if (typeof requesterOpts.opts.headers === 'function') {\n          return requesterOpts.opts.headers({\n            opList: batchOps\n          });\n        }\n        return requesterOpts.opts.headers;\n      }\n    });\n    return {\n      promise: promise.then(res => {\n        const resJSON = Array.isArray(res.json) ? res.json : batchOps.map(() => res.json);\n        const result = resJSON.map(item => ({\n          meta: res.meta,\n          json: item\n        }));\n        return result;\n      }),\n      cancel\n    };\n  };\n};\nconst httpBatchLink = createHTTPBatchLink(batchRequester);\nexport { createHTTPBatchLink as c, httpBatchLink as h };", "import { observable } from '@trpc/server/observable';\nimport { t as transformResult } from '../transformResult-ace864b8.mjs';\nimport { T as TRPCClientError } from '../TRPCClientError-38f9a32a.mjs';\nimport { r as resolveHTTPLinkOptions, j as jsonHttpRequester } from '../httpUtils-b9d0cb48.mjs';\nimport '@trpc/server/shared';\nfunction httpLinkFactory(factoryOpts) {\n  return opts => {\n    const resolvedOpts = resolveHTTPLinkOptions(opts);\n    return runtime => ({\n      op\n    }) => observable(observer => {\n      const {\n        path,\n        input,\n        type\n      } = op;\n      const {\n        promise,\n        cancel\n      } = factoryOpts.requester({\n        ...resolvedOpts,\n        runtime,\n        type,\n        path,\n        input,\n        headers() {\n          if (!opts.headers) {\n            return {};\n          }\n          if (typeof opts.headers === 'function') {\n            return opts.headers({\n              op\n            });\n          }\n          return opts.headers;\n        }\n      });\n      let meta = undefined;\n      promise.then(res => {\n        meta = res.meta;\n        const transformed = transformResult(res.json, runtime);\n        if (!transformed.ok) {\n          observer.error(TRPCClientError.from(transformed.error, {\n            meta\n          }));\n          return;\n        }\n        observer.next({\n          context: res.meta,\n          result: transformed.result\n        });\n        observer.complete();\n      }).catch(cause => {\n        observer.error(TRPCClientError.from(cause, {\n          meta\n        }));\n      });\n      return () => {\n        cancel();\n      };\n    });\n  };\n}\n/**\n * @see https://trpc.io/docs/client/links/httpLink\n */\nconst httpLink = httpLinkFactory({\n  requester: jsonHttpRequester\n});\nexport { httpLink, httpLinkFactory };", "import { observable, tap } from '@trpc/server/observable';\n\n/// <reference lib=\"dom.iterable\" />\nfunction isFormData(value) {\n  if (typeof FormData === 'undefined') {\n    // FormData is not supported\n    return false;\n  }\n  return value instanceof FormData;\n}\nconst palettes = {\n  css: {\n    query: ['72e3ff', '3fb0d8'],\n    mutation: ['c5a3fc', '904dfc'],\n    subscription: ['ff49e1', 'd83fbe']\n  },\n  ansi: {\n    regular: {\n      // Cyan background, black and white text respectively\n      query: ['\\x1b[30;46m', '\\x1b[97;46m'],\n      // Magenta background, black and white text respectively\n      mutation: ['\\x1b[30;45m', '\\x1b[97;45m'],\n      // Green background, black and white text respectively\n      subscription: ['\\x1b[30;42m', '\\x1b[97;42m']\n    },\n    bold: {\n      query: ['\\x1b[1;30;46m', '\\x1b[1;97;46m'],\n      mutation: ['\\x1b[1;30;45m', '\\x1b[1;97;45m'],\n      subscription: ['\\x1b[1;30;42m', '\\x1b[1;97;42m']\n    }\n  }\n};\nfunction constructPartsAndArgs(opts) {\n  const {\n    direction,\n    type,\n    path,\n    id,\n    input\n  } = opts;\n  const parts = [];\n  const args = [];\n  if (opts.colorMode === 'ansi') {\n    const [lightRegular, darkRegular] = palettes.ansi.regular[type];\n    const [lightBold, darkBold] = palettes.ansi.bold[type];\n    const reset = '\\x1b[0m';\n    parts.push(direction === 'up' ? lightRegular : darkRegular, direction === 'up' ? '>>' : '<<', type, direction === 'up' ? lightBold : darkBold, `#${id}`, path, reset);\n    if (direction === 'up') {\n      args.push({\n        input: opts.input\n      });\n    } else {\n      args.push({\n        input: opts.input,\n        // strip context from result cause it's too noisy in terminal wihtout collapse mode\n        result: 'result' in opts.result ? opts.result.result : opts.result,\n        elapsedMs: opts.elapsedMs\n      });\n    }\n    return {\n      parts,\n      args\n    };\n  }\n  const [light, dark] = palettes.css[type];\n  const css = `\n    background-color: #${direction === 'up' ? light : dark}; \n    color: ${direction === 'up' ? 'black' : 'white'};\n    padding: 2px;\n  `;\n  parts.push('%c', direction === 'up' ? '>>' : '<<', type, `#${id}`, `%c${path}%c`, '%O');\n  args.push(css, `${css}; font-weight: bold;`, `${css}; font-weight: normal;`);\n  if (direction === 'up') {\n    args.push({\n      input,\n      context: opts.context\n    });\n  } else {\n    args.push({\n      input,\n      result: opts.result,\n      elapsedMs: opts.elapsedMs,\n      context: opts.context\n    });\n  }\n  return {\n    parts,\n    args\n  };\n}\n// maybe this should be moved to it's own package\nconst defaultLogger = ({\n  c = console,\n  colorMode = 'css'\n}) => props => {\n  const rawInput = props.input;\n  const input = isFormData(rawInput) ? Object.fromEntries(rawInput) : rawInput;\n  const {\n    parts,\n    args\n  } = constructPartsAndArgs({\n    ...props,\n    colorMode,\n    input\n  });\n  const fn = props.direction === 'down' && props.result && (props.result instanceof Error || 'error' in props.result.result) ? 'error' : 'log';\n  c[fn].apply(null, [parts.join(' ')].concat(args));\n};\n/**\n * @see https://trpc.io/docs/client/links/loggerLink\n */\nfunction loggerLink(opts = {}) {\n  const {\n    enabled = () => true\n  } = opts;\n  const colorMode = opts.colorMode ?? (typeof window === 'undefined' ? 'ansi' : 'css');\n  const {\n    logger = defaultLogger({\n      c: opts.console,\n      colorMode\n    })\n  } = opts;\n  return () => {\n    return ({\n      op,\n      next\n    }) => {\n      return observable(observer => {\n        // ->\n        enabled({\n          ...op,\n          direction: 'up'\n        }) && logger({\n          ...op,\n          direction: 'up'\n        });\n        const requestStartTime = Date.now();\n        function logResult(result) {\n          const elapsedMs = Date.now() - requestStartTime;\n          enabled({\n            ...op,\n            direction: 'down',\n            result\n          }) && logger({\n            ...op,\n            direction: 'down',\n            elapsedMs,\n            result\n          });\n        }\n        return next(op).pipe(tap({\n          next(result) {\n            logResult(result);\n          },\n          error(result) {\n            logResult(result);\n          }\n        })).subscribe(observer);\n      });\n    };\n  };\n}\nexport { loggerLink };", "import { observable } from '@trpc/server/observable';\nimport { t as transformResult } from '../transformResult-ace864b8.mjs';\nimport { T as TRPCClientError } from '../TRPCClientError-38f9a32a.mjs';\nimport '@trpc/server/shared';\n\n/* istanbul ignore next -- @preserve */\nconst retryDelay = attemptIndex => attemptIndex === 0 ? 0 : Math.min(1000 * 2 ** attemptIndex, 30000);\nfunction createWSClient(opts) {\n  const {\n    url,\n    WebSocket: WebSocketImpl = WebSocket,\n    retryDelayMs: retryDelayFn = retryDelay,\n    onOpen,\n    onClose\n  } = opts;\n  /* istanbul ignore next -- @preserve */\n  if (!WebSocketImpl) {\n    throw new Error(\"No WebSocket implementation found - you probably don't want to use this on the server, but if you do you need to pass a `WebSocket`-ponyfill\");\n  }\n  /**\n  * outgoing messages buffer whilst not open\n  */\n  let outgoing = [];\n  const pendingRequests = Object.create(null);\n  let connectAttempt = 0;\n  let dispatchTimer = null;\n  let connectTimer = null;\n  let activeConnection = createWS();\n  let state = 'connecting';\n  /**\n  * tries to send the list of messages\n  */\n  function dispatch() {\n    if (state !== 'open' || dispatchTimer) {\n      return;\n    }\n    dispatchTimer = setTimeout(() => {\n      dispatchTimer = null;\n      if (outgoing.length === 1) {\n        // single send\n        activeConnection.send(JSON.stringify(outgoing.pop()));\n      } else {\n        // batch send\n        activeConnection.send(JSON.stringify(outgoing));\n      }\n      // clear\n      outgoing = [];\n    });\n  }\n  function tryReconnect() {\n    if (connectTimer !== null || state === 'closed') {\n      return;\n    }\n    const timeout = retryDelayFn(connectAttempt++);\n    reconnectInMs(timeout);\n  }\n  function reconnect() {\n    state = 'connecting';\n    const oldConnection = activeConnection;\n    activeConnection = createWS();\n    closeIfNoPending(oldConnection);\n  }\n  function reconnectInMs(ms) {\n    if (connectTimer) {\n      return;\n    }\n    state = 'connecting';\n    connectTimer = setTimeout(reconnect, ms);\n  }\n  function closeIfNoPending(conn) {\n    // disconnect as soon as there are are no pending result\n    const hasPendingRequests = Object.values(pendingRequests).some(p => p.ws === conn);\n    if (!hasPendingRequests) {\n      conn.close();\n    }\n  }\n  function closeActiveSubscriptions() {\n    Object.values(pendingRequests).forEach(req => {\n      if (req.type === 'subscription') {\n        req.callbacks.complete();\n      }\n    });\n  }\n  function resumeSubscriptionOnReconnect(req) {\n    if (outgoing.some(r => r.id === req.op.id)) {\n      return;\n    }\n    request(req.op, req.callbacks);\n  }\n  function createWS() {\n    const urlString = typeof url === 'function' ? url() : url;\n    const conn = new WebSocketImpl(urlString);\n    clearTimeout(connectTimer);\n    connectTimer = null;\n    conn.addEventListener('open', () => {\n      /* istanbul ignore next -- @preserve */if (conn !== activeConnection) {\n        return;\n      }\n      connectAttempt = 0;\n      state = 'open';\n      onOpen?.();\n      dispatch();\n    });\n    conn.addEventListener('error', () => {\n      if (conn === activeConnection) {\n        tryReconnect();\n      }\n    });\n    const handleIncomingRequest = req => {\n      if (req.method === 'reconnect' && conn === activeConnection) {\n        if (state === 'open') {\n          onClose?.();\n        }\n        reconnect();\n        // notify subscribers\n        for (const pendingReq of Object.values(pendingRequests)) {\n          if (pendingReq.type === 'subscription') {\n            resumeSubscriptionOnReconnect(pendingReq);\n          }\n        }\n      }\n    };\n    const handleIncomingResponse = data => {\n      const req = data.id !== null && pendingRequests[data.id];\n      if (!req) {\n        // do something?\n        return;\n      }\n      req.callbacks.next?.(data);\n      if (req.ws !== activeConnection && conn === activeConnection) {\n        const oldWs = req.ws;\n        // gracefully replace old connection with this\n        req.ws = activeConnection;\n        closeIfNoPending(oldWs);\n      }\n      if ('result' in data && data.result.type === 'stopped' && conn === activeConnection) {\n        req.callbacks.complete();\n      }\n    };\n    conn.addEventListener('message', ({\n      data\n    }) => {\n      const msg = JSON.parse(data);\n      if ('method' in msg) {\n        handleIncomingRequest(msg);\n      } else {\n        handleIncomingResponse(msg);\n      }\n      if (conn !== activeConnection || state === 'closed') {\n        // when receiving a message, we close old connection that has no pending requests\n        closeIfNoPending(conn);\n      }\n    });\n    conn.addEventListener('close', ({\n      code\n    }) => {\n      if (state === 'open') {\n        onClose?.({\n          code\n        });\n      }\n      if (activeConnection === conn) {\n        // connection might have been replaced already\n        tryReconnect();\n      }\n      for (const [key, req] of Object.entries(pendingRequests)) {\n        if (req.ws !== conn) {\n          continue;\n        }\n        if (state === 'closed') {\n          // If the connection was closed, we just call `complete()` on the request\n          delete pendingRequests[key];\n          req.callbacks.complete?.();\n          continue;\n        }\n        // The connection was closed either unexpectedly or because of a reconnect\n        if (req.type === 'subscription') {\n          // Subscriptions will resume after we've reconnected\n          resumeSubscriptionOnReconnect(req);\n        } else {\n          // Queries and mutations will error if interrupted\n          delete pendingRequests[key];\n          req.callbacks.error?.(TRPCClientError.from(new TRPCWebSocketClosedError('WebSocket closed prematurely')));\n        }\n      }\n    });\n    return conn;\n  }\n  function request(op, callbacks) {\n    const {\n      type,\n      input,\n      path,\n      id\n    } = op;\n    const envelope = {\n      id,\n      method: type,\n      params: {\n        input,\n        path\n      }\n    };\n    pendingRequests[id] = {\n      ws: activeConnection,\n      type,\n      callbacks,\n      op\n    };\n    // enqueue message\n    outgoing.push(envelope);\n    dispatch();\n    return () => {\n      const callbacks = pendingRequests[id]?.callbacks;\n      delete pendingRequests[id];\n      outgoing = outgoing.filter(msg => msg.id !== id);\n      callbacks?.complete?.();\n      if (activeConnection.readyState === WebSocketImpl.OPEN && op.type === 'subscription') {\n        outgoing.push({\n          id,\n          method: 'subscription.stop'\n        });\n        dispatch();\n      }\n    };\n  }\n  return {\n    close: () => {\n      state = 'closed';\n      onClose?.();\n      closeActiveSubscriptions();\n      closeIfNoPending(activeConnection);\n      clearTimeout(connectTimer);\n      connectTimer = null;\n    },\n    request,\n    getConnection() {\n      return activeConnection;\n    }\n  };\n}\nclass TRPCWebSocketClosedError extends Error {\n  constructor(message) {\n    super(message);\n    this.name = 'TRPCWebSocketClosedError';\n    Object.setPrototypeOf(this, TRPCWebSocketClosedError.prototype);\n  }\n}\n/**\n * @see https://trpc.io/docs/client/links/wsLink\n */\nfunction wsLink(opts) {\n  return runtime => {\n    const {\n      client\n    } = opts;\n    return ({\n      op\n    }) => {\n      return observable(observer => {\n        const {\n          type,\n          path,\n          id,\n          context\n        } = op;\n        const input = runtime.transformer.serialize(op.input);\n        const unsub = client.request({\n          type,\n          path,\n          input,\n          id,\n          context\n        }, {\n          error(err) {\n            observer.error(err);\n            unsub();\n          },\n          complete() {\n            observer.complete();\n          },\n          next(message) {\n            const transformed = transformResult(message, runtime);\n            if (!transformed.ok) {\n              observer.error(TRPCClientError.from(transformed.error));\n              return;\n            }\n            observer.next({\n              result: transformed.result\n            });\n            if (op.type !== 'subscription') {\n              // if it isn't a subscription we don't care about next response\n              unsub();\n              observer.complete();\n            }\n          }\n        });\n        return () => {\n          unsub();\n        };\n      });\n    };\n  };\n}\nexport { createWSClient, wsLink };", "import { share, observableToPromise } from '@trpc/server/observable';\nimport { c as createChain } from './splitLink-4c75f7be.mjs';\nexport { s as splitLink } from './splitLink-4c75f7be.mjs';\nimport { T as TRPCClientError } from './TRPCClientError-38f9a32a.mjs';\nexport { T as TRPCClientError } from './TRPCClientError-38f9a32a.mjs';\nimport { createFlatProxy, createRecursiveProxy } from '@trpc/server/shared';\nimport { f as fetchHTTPResponse, g as getUrl, a as getBody$1, h as httpRequest } from './httpUtils-b9d0cb48.mjs';\nexport { b as getFetch } from './httpUtils-b9d0cb48.mjs';\nimport { c as createHTTPBatchLink } from './httpBatchLink-d0f9eac9.mjs';\nexport { h as httpBatchLink } from './httpBatchLink-d0f9eac9.mjs';\nimport { httpLinkFactory } from './links/httpLink.mjs';\nexport { httpLink, httpLinkFactory } from './links/httpLink.mjs';\nexport { loggerLink } from './links/loggerLink.mjs';\nexport { createWSClient, wsLink } from './links/wsLink.mjs';\nimport './transformResult-ace864b8.mjs';\nclass TRPCUntypedClient {\n  $request({\n    type,\n    input,\n    path,\n    context = {}\n  }) {\n    const chain$ = createChain({\n      links: this.links,\n      op: {\n        id: ++this.requestId,\n        type,\n        path,\n        input,\n        context\n      }\n    });\n    return chain$.pipe(share());\n  }\n  requestAsPromise(opts) {\n    const req$ = this.$request(opts);\n    const {\n      promise,\n      abort\n    } = observableToPromise(req$);\n    const abortablePromise = new Promise((resolve, reject) => {\n      opts.signal?.addEventListener('abort', abort);\n      promise.then(envelope => {\n        resolve(envelope.result.data);\n      }).catch(err => {\n        reject(TRPCClientError.from(err));\n      });\n    });\n    return abortablePromise;\n  }\n  query(path, input, opts) {\n    return this.requestAsPromise({\n      type: 'query',\n      path,\n      input,\n      context: opts?.context,\n      signal: opts?.signal\n    });\n  }\n  mutation(path, input, opts) {\n    return this.requestAsPromise({\n      type: 'mutation',\n      path,\n      input,\n      context: opts?.context,\n      signal: opts?.signal\n    });\n  }\n  subscription(path, input, opts) {\n    const observable$ = this.$request({\n      type: 'subscription',\n      path,\n      input,\n      context: opts?.context\n    });\n    return observable$.subscribe({\n      next(envelope) {\n        if (envelope.result.type === 'started') {\n          opts.onStarted?.();\n        } else if (envelope.result.type === 'stopped') {\n          opts.onStopped?.();\n        } else {\n          opts.onData?.(envelope.result.data);\n        }\n      },\n      error(err) {\n        opts.onError?.(err);\n      },\n      complete() {\n        opts.onComplete?.();\n      }\n    });\n  }\n  constructor(opts) {\n    this.requestId = 0;\n    const combinedTransformer = (() => {\n      const transformer = opts.transformer;\n      if (!transformer) {\n        return {\n          input: {\n            serialize: data => data,\n            deserialize: data => data\n          },\n          output: {\n            serialize: data => data,\n            deserialize: data => data\n          }\n        };\n      }\n      if ('input' in transformer) {\n        return opts.transformer;\n      }\n      return {\n        input: transformer,\n        output: transformer\n      };\n    })();\n    this.runtime = {\n      transformer: {\n        serialize: data => combinedTransformer.input.serialize(data),\n        deserialize: data => combinedTransformer.output.deserialize(data)\n      },\n      combinedTransformer\n    };\n    // Initialize the links\n    this.links = opts.links.map(link => link(this.runtime));\n  }\n}\nfunction createTRPCUntypedClient(opts) {\n  return new TRPCUntypedClient(opts);\n}\n\n/**\n * @deprecated use `createTRPCProxyClient` instead\n */\nfunction createTRPCClient(opts) {\n  const client = new TRPCUntypedClient(opts);\n  return client;\n}\nconst clientCallTypeMap = {\n  query: 'query',\n  mutate: 'mutation',\n  subscribe: 'subscription'\n};\n/** @internal */\nconst clientCallTypeToProcedureType = clientCallType => {\n  return clientCallTypeMap[clientCallType];\n};\n/**\n * @deprecated use `createTRPCProxyClient` instead\n * @internal\n */\nfunction createTRPCClientProxy(client) {\n  return createFlatProxy(key => {\n    if (client.hasOwnProperty(key)) {\n      return client[key];\n    }\n    if (key === '__untypedClient') {\n      return client;\n    }\n    return createRecursiveProxy(({\n      path,\n      args\n    }) => {\n      const pathCopy = [key, ...path];\n      const procedureType = clientCallTypeToProcedureType(pathCopy.pop());\n      const fullPath = pathCopy.join('.');\n      return client[procedureType](fullPath, ...args);\n    });\n  });\n}\nfunction createTRPCProxyClient(opts) {\n  const client = new TRPCUntypedClient(opts);\n  const proxy = createTRPCClientProxy(client);\n  return proxy;\n}\n/**\n * Get an untyped client from a proxy client\n * @internal\n */\nfunction getUntypedClient(client) {\n  return client.__untypedClient;\n}\nfunction getTextDecoder(customTextDecoder) {\n  if (customTextDecoder) {\n    return customTextDecoder;\n  }\n  // eslint-disable-next-line @typescript-eslint/prefer-optional-chain\n  if (typeof window !== 'undefined' && window.TextDecoder) {\n    return new window.TextDecoder();\n  }\n  // eslint-disable-next-line @typescript-eslint/prefer-optional-chain\n  if (typeof globalThis !== 'undefined' && globalThis.TextDecoder) {\n    return new globalThis.TextDecoder();\n  }\n  throw new Error('No TextDecoder implementation found');\n}\n\n// Stream parsing adapted from https://www.loginradius.com/blog/engineering/guest-post/http-streaming-with-nodejs-and-fetch-api/\n/**\n * @internal\n * @description Take a stream of bytes and call `onLine` with\n * a JSON object for each line in the stream. Expected stream\n * format is:\n * ```json\n * {\"1\": {...}\n * ,\"0\": {...}\n * }\n * ```\n */\nasync function parseJSONStream(opts) {\n  const parse = opts.parse ?? JSON.parse;\n  const onLine = line => {\n    if (opts.signal?.aborted) return;\n    if (!line || line === '}') {\n      return;\n    }\n    /**\n    * At this point, `line` can be one of two things:\n    * - The first line of the stream `{\"2\":{...}`\n    * - A line in the middle of the stream `,\"2\":{...}`\n    */\n    const indexOfColon = line.indexOf(':');\n    const indexAsStr = line.substring(2, indexOfColon - 1);\n    const text = line.substring(indexOfColon + 1);\n    opts.onSingle(Number(indexAsStr), parse(text));\n  };\n  await readLines(opts.readableStream, onLine, opts.textDecoder);\n}\n/**\n * Handle transforming a stream of bytes into lines of text.\n * To avoid using AsyncIterators / AsyncGenerators,\n * we use a callback for each line.\n *\n * @param readableStream can be a NodeJS stream or a WebAPI stream\n * @param onLine will be called for every line ('\\n' delimited) in the stream\n */\nasync function readLines(readableStream, onLine, textDecoder) {\n  let partOfLine = '';\n  const onChunk = chunk => {\n    const chunkText = textDecoder.decode(chunk);\n    const chunkLines = chunkText.split('\\n');\n    if (chunkLines.length === 1) {\n      partOfLine += chunkLines[0];\n    } else if (chunkLines.length > 1) {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion -- length checked on line above\n      onLine(partOfLine + chunkLines[0]);\n      for (let i = 1; i < chunkLines.length - 1; i++) {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion -- length checked on line above\n        onLine(chunkLines[i]);\n      }\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion -- length doesn't change, so is necessarily > 1\n      partOfLine = chunkLines[chunkLines.length - 1];\n    }\n  };\n  // we handle 2 different types of streams, this if where we figure out which one we have\n  if ('getReader' in readableStream) {\n    await readStandardChunks(readableStream, onChunk);\n  } else {\n    await readNodeChunks(readableStream, onChunk);\n  }\n  onLine(partOfLine);\n}\n/**\n * Handle NodeJS stream\n */\nfunction readNodeChunks(stream, onChunk) {\n  return new Promise(resolve => {\n    stream.on('data', onChunk);\n    stream.on('end', resolve);\n  });\n}\n/**\n * Handle WebAPI stream\n */\nasync function readStandardChunks(stream, onChunk) {\n  const reader = stream.getReader();\n  let readResult = await reader.read();\n  while (!readResult.done) {\n    onChunk(readResult.value);\n    readResult = await reader.read();\n  }\n}\nconst streamingJsonHttpRequester = (opts, onSingle) => {\n  const ac = opts.AbortController ? new opts.AbortController() : null;\n  const responsePromise = fetchHTTPResponse({\n    ...opts,\n    contentTypeHeader: 'application/json',\n    batchModeHeader: 'stream',\n    getUrl,\n    getBody: getBody$1\n  }, ac);\n  const cancel = () => ac?.abort();\n  const promise = responsePromise.then(async res => {\n    if (!res.body) throw new Error('Received response without body');\n    const meta = {\n      response: res\n    };\n    return parseJSONStream({\n      readableStream: res.body,\n      onSingle,\n      parse: string => ({\n        json: JSON.parse(string),\n        meta\n      }),\n      signal: ac?.signal,\n      textDecoder: opts.textDecoder\n    });\n  });\n  return {\n    cancel,\n    promise\n  };\n};\nconst streamRequester = requesterOpts => {\n  const textDecoder = getTextDecoder(requesterOpts.opts.textDecoder);\n  return (batchOps, unitResolver) => {\n    const path = batchOps.map(op => op.path).join(',');\n    const inputs = batchOps.map(op => op.input);\n    const {\n      cancel,\n      promise\n    } = streamingJsonHttpRequester({\n      ...requesterOpts,\n      textDecoder,\n      path,\n      inputs,\n      headers() {\n        if (!requesterOpts.opts.headers) {\n          return {};\n        }\n        if (typeof requesterOpts.opts.headers === 'function') {\n          return requesterOpts.opts.headers({\n            opList: batchOps\n          });\n        }\n        return requesterOpts.opts.headers;\n      }\n    }, (index, res) => {\n      unitResolver(index, res);\n    });\n    return {\n      /**\n      * return an empty array because the batchLoader expects an array of results\n      * but we've already called the `unitResolver` for each of them, there's\n      * nothing left to do here.\n      */\n      promise: promise.then(() => []),\n      cancel\n    };\n  };\n};\nconst unstable_httpBatchStreamLink = createHTTPBatchLink(streamRequester);\nconst getBody = opts => {\n  if (!('input' in opts)) {\n    return undefined;\n  }\n  if (!(opts.input instanceof FormData)) {\n    throw new Error('Input is not FormData');\n  }\n  return opts.input;\n};\nconst formDataRequester = opts => {\n  if (opts.type !== 'mutation') {\n    // TODO(?) handle formdata queries\n    throw new Error('We only handle mutations with formdata');\n  }\n  return httpRequest({\n    ...opts,\n    getUrl() {\n      return `${opts.url}/${opts.path}`;\n    },\n    getBody\n  });\n};\nconst experimental_formDataLink = httpLinkFactory({\n  requester: formDataRequester\n});\nexport { TRPCUntypedClient, clientCallTypeToProcedureType, createTRPCClient, createTRPCClientProxy, createTRPCProxyClient, createTRPCUntypedClient, experimental_formDataLink, getUntypedClient, unstable_httpBatchStreamLink };"],
  "mappings": "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",
  "names": ["observable", "TRPC_ERROR_CODES_BY_NUMBER", "isObject", "isObject", "item", "httpBatchLink", "callbacks", "getBody"]
}
